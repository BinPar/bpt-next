name: Build, version and tag
on:
  push:
    branches:
      - main
jobs:
  build_version_tag:
    name: Build, version and tag
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - uses: vmware-tanzu/carvel-setup-action@v1
        with:
          only: ytt
          ytt: '0.36.0'
      - name: NPM Install
        run: npm i
      - name: Get next version
        run: echo "NEXT_VERSION=$(npm_config_yes=true npx standard-version --dry-run | head -n 1 | sed -n -e 's/.*bumping version in .* from .* to \(.*\).*/\1/p')" >> $GITHUB_ENV
      - name: Read project name
        uses: KJ002/read-yaml@1.5
        id: project-name-data
        with:
          file: './k8s/templates/values.yml'
          key-path: '["projectName"]'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Create ECR repository if not exists
        run: ./.github/create-ecr-repository-if-not-exists.sh ${{ steps.project-name-data.outputs.data }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build image and push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.project-name-data.outputs.data }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$NEXT_VERSION -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$NEXT_VERSION
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - name: Read environment names
        uses: KJ002/read-yaml@1.5
        id: env-names-data
        with:
          file: './k8s/templates/values.yml'
          key-path: '["environments"]'
      - name: Setup Kubernetes Tools
        uses: yokawasa/action-setup-kube-tools@v0.8.0
        id: kubernetes-tools
        with:
          setup-tools: |
            kubectl
            rancher
      - name: Login rancher
        run: rancher login --token ${{ secrets.RANCHER_TOKEN }} --context ${{ secrets.RANCHER_CONTEXT }} ${{ secrets.RANCHER_URL }}
      - name: Check k8s resources and create if not exists
        run: ./.github/create-k8s-if-not-exists.sh ${{ steps.env-names-data.outputs.data }}
